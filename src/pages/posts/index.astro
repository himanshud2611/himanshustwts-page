---
export const prerender = true;

import Layout from '../../layouts/Layout.astro';
import path from 'path';

import { mediumarticles } from '../m/[...slug].astro';

interface PostData {
  slug: string;
  title?: string;
  date?: string;
  redirect?: string;
  description?: string;
  [key: string]: any;
}

const posts = await Astro.glob('../../posts/**/*.mdx');
const postData: PostData[] = posts.map((post): PostData => {
  const relativePath = path.relative(path.resolve('src/posts'), post.file);
  const slug = relativePath.replace('.mdx', '');
  
  return {
    slug,
    ...post.frontmatter
  };
});

const mediumPosts: PostData[] = mediumarticles.map(article => ({
  slug: `m/${article.slug}`,
  title: article.title,
  description: article.description || '',
  date: article.date,
  redirect: article.redirect,
  tags: article.tags
}));

const allPosts = [...postData, ...mediumPosts];

const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.date || '1970-01-01').getTime();
  const dateB = new Date(b.date || '1970-01-01').getTime();
  return dateB - dateA;
});
---
<Layout title="All Posts" wide={true}>
  <div class="mb-8 relative overflow-hidden rounded-xl bg-gradient-to-r from-gruvbox-light-accent/5 to-gruvbox-light/5 dark:from-gruvbox-dark-accent/10 dark:to-gruvbox-dark/10 border border-gruvbox-light-accent/20 dark:border-gruvbox-dark-accent/20">
    <div class="relative p-4 sm:p-6">
      <div class="flex flex-col sm:flex-row sm:items-start gap-4">
        <img 
          src="/gradientlogs.webp" 
          alt="GradientLogs logo" 
          class="w-10 h-10 rounded-lg"
        />
        <div class="flex-1">
          <h2 class="text-lg font-medium mb-2">Subscribe to GradientLogs âœ¨</h2>
          <p class="text-gruvbox-light/70 dark:text-gruvbox-dark/70 mb-4 text-sm sm:text-base">Deep dives into ML architectures and thoughts on culture, art, and everything in between.</p>
          <div class="flex justify-start">
            <a 
              href="https://himanshustwts.substack.com"
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gruvbox-light-accent dark:text-gruvbox-dark-accent border border-current rounded-lg hover:bg-gruvbox-light-accent/5 dark:hover:bg-gruvbox-dark-accent/5 transition-colors"
            >
              Subscribe to Newsletter
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M5 12h14M12 5l7 7-7 7" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
        </div>
      </div>
    </div>
  </div>

  <div class="mb-6">
    <input 
      type="text" 
      id="searchInput" 
      placeholder="Search posts by title, description, or tags..." 
      class="w-full p-3 border dark:border-gruvbox-dark-accent border-gruvbox-light-accent dark:bg-gruvbox-dark-accent/10 bg-gruvbox-light-accent/20 focus:outline-none focus:ring-2 dark:focus:ring-gruvbox-dark-accent focus:ring-gruvbox-light-accent"
    />
  </div>
  
  <div class="mb-6">
    <div class="flex flex-wrap gap-2">
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="">All</button>
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="medium">Medium</button>
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="ai">AI</button>
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="ml">ML</button>
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="model-review">Model Review</button>
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="dl">Deep Learning</button>
      <button class="tag-filter px-3 py-1 border cursor-pointer dark:hover:text-gruvbox-dark-bg dark:hover:bg-gruvbox-dark-accent hover:text-gruvbox-light-bg border-gruvbox-light-accent dark:border-gruvbox-dark-accent hover:bg-gruvbox-light-accent transition-colors" data-tag="architecture">Architecture</button>
    </div>
  </div>
  
  <div id="postsContainer" class="posts-list flex flex-wrap w-full">
    {sortedPosts.map((post) => (
      <a href={ post.tags.includes("medium") ? `/${post.slug}` : `/posts/${post.slug}`} class="post-item w-full dark:hover:text-gruvbox-dark-bg hover:text-gruvbox-light-bg md:w-1/2 dark:hover:bg-gruvbox-dark-accent hover:bg-gruvbox-light-accent p-4" data-title={post.title} data-description={post.description} data-tags={post.tags?.join(' ')}>
        <h2>{post.title}</h2>
        <time>{post.date}</time>
        {post.description && <p class="mt-2 text-sm break-keep">{post.description}</p>}
      </a>
    ))}
  </div>

  <script>
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const postsContainer = document.getElementById('postsContainer') as HTMLElement;
    const tagFilters = document.querySelectorAll('.tag-filter') as NodeListOf<HTMLButtonElement>;
    const allPosts = Array.from(postsContainer.querySelectorAll('.post-item')) as HTMLElement[];
    
    let activeTag = '';
    
    function filterPosts() {
      const searchTerm = searchInput.value.toLowerCase().trim();
      
      allPosts.forEach(post => {
        const title = post.getAttribute('data-title')?.toLowerCase() || '';
        const description = post.getAttribute('data-description')?.toLowerCase() || '';
        const tags = post.getAttribute('data-tags')?.toLowerCase() || '';
        
        const matchesSearch = !searchTerm || 
                             title.includes(searchTerm) || 
                             description.includes(searchTerm) || 
                             tags.includes(searchTerm);
        
        const matchesTag = !activeTag || tags.includes(activeTag.toLowerCase());
        
        post.style.display = (matchesSearch && matchesTag) ? 'block' : 'none';
      });
    }
    
    // Search input event
    searchInput.addEventListener('input', filterPosts);
    
    tagFilters.forEach(button => {
      button.addEventListener('click', (e) => {
        tagFilters.forEach(btn => btn.classList.remove('bg-gruvbox-light-accent'));
        tagFilters.forEach(btn => btn.classList.remove('dark:bg-gruvbox-dark-accent'));
        tagFilters.forEach(btn => btn.classList.remove('dark:text-gruvbox-dark-bg'));
        tagFilters.forEach(btn => btn.classList.remove('text-gruvbox-light-bg'));
        
        (e.target as HTMLButtonElement).classList.add('bg-gruvbox-light-accent');
        (e.target as HTMLButtonElement).classList.add('text-gruvbox-light-bg');
        (e.target as HTMLButtonElement).classList.add('dark:bg-gruvbox-dark-accent');
        (e.target as HTMLButtonElement).classList.add('dark:text-gruvbox-dark-bg');
        
        activeTag = (e.target as HTMLButtonElement).getAttribute('data-tag') || '';
        filterPosts();
      });
    });
    
    // Set "All" as default active
    tagFilters[0].classList.add('bg-gruvbox-light-accent');
    tagFilters[0].classList.add('text-gruvbox-light-bg');
    tagFilters[0].classList.add('dark:bg-gruvbox-dark-accent');
    tagFilters[0].classList.add('dark:text-gruvbox-dark-bg');
  </script>
</Layout>